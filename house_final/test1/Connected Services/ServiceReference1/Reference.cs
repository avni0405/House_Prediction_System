//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace test1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgentDetail", Namespace="http://schemas.datacontract.org/2004/07/test1_service")]
    [System.SerializableAttribute()]
    public partial class AgentDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Details", Namespace="http://schemas.datacontract.org/2004/07/test1_service")]
    [System.SerializableAttribute()]
    public partial class Details : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float BedroomAbvGrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CentralAirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float FirstFlrSFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float FullBathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float GrLivAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HouseStyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float KitchenAbvGrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LotAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NeighborhoodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OverallCondField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float OverallQualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SecondFlrSFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float SellPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotRmsAbvGrdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalBsmtSFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UtilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YearBuiltField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float BedroomAbvGr {
            get {
                return this.BedroomAbvGrField;
            }
            set {
                if ((this.BedroomAbvGrField.Equals(value) != true)) {
                    this.BedroomAbvGrField = value;
                    this.RaisePropertyChanged("BedroomAbvGr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CentralAir {
            get {
                return this.CentralAirField;
            }
            set {
                if ((this.CentralAirField.Equals(value) != true)) {
                    this.CentralAirField = value;
                    this.RaisePropertyChanged("CentralAir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float FirstFlrSF {
            get {
                return this.FirstFlrSFField;
            }
            set {
                if ((this.FirstFlrSFField.Equals(value) != true)) {
                    this.FirstFlrSFField = value;
                    this.RaisePropertyChanged("FirstFlrSF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float FullBath {
            get {
                return this.FullBathField;
            }
            set {
                if ((this.FullBathField.Equals(value) != true)) {
                    this.FullBathField = value;
                    this.RaisePropertyChanged("FullBath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float GrLivArea {
            get {
                return this.GrLivAreaField;
            }
            set {
                if ((this.GrLivAreaField.Equals(value) != true)) {
                    this.GrLivAreaField = value;
                    this.RaisePropertyChanged("GrLivArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseStyle {
            get {
                return this.HouseStyleField;
            }
            set {
                if ((object.ReferenceEquals(this.HouseStyleField, value) != true)) {
                    this.HouseStyleField = value;
                    this.RaisePropertyChanged("HouseStyle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float KitchenAbvGr {
            get {
                return this.KitchenAbvGrField;
            }
            set {
                if ((this.KitchenAbvGrField.Equals(value) != true)) {
                    this.KitchenAbvGrField = value;
                    this.RaisePropertyChanged("KitchenAbvGr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float LotArea {
            get {
                return this.LotAreaField;
            }
            set {
                if ((this.LotAreaField.Equals(value) != true)) {
                    this.LotAreaField = value;
                    this.RaisePropertyChanged("LotArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Neighborhood {
            get {
                return this.NeighborhoodField;
            }
            set {
                if ((object.ReferenceEquals(this.NeighborhoodField, value) != true)) {
                    this.NeighborhoodField = value;
                    this.RaisePropertyChanged("Neighborhood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OverallCond {
            get {
                return this.OverallCondField;
            }
            set {
                if ((this.OverallCondField.Equals(value) != true)) {
                    this.OverallCondField = value;
                    this.RaisePropertyChanged("OverallCond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float OverallQual {
            get {
                return this.OverallQualField;
            }
            set {
                if ((this.OverallQualField.Equals(value) != true)) {
                    this.OverallQualField = value;
                    this.RaisePropertyChanged("OverallQual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SecondFlrSF {
            get {
                return this.SecondFlrSFField;
            }
            set {
                if ((this.SecondFlrSFField.Equals(value) != true)) {
                    this.SecondFlrSFField = value;
                    this.RaisePropertyChanged("SecondFlrSF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float SellPrice {
            get {
                return this.SellPriceField;
            }
            set {
                if ((this.SellPriceField.Equals(value) != true)) {
                    this.SellPriceField = value;
                    this.RaisePropertyChanged("SellPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotRmsAbvGrd {
            get {
                return this.TotRmsAbvGrdField;
            }
            set {
                if ((this.TotRmsAbvGrdField.Equals(value) != true)) {
                    this.TotRmsAbvGrdField = value;
                    this.RaisePropertyChanged("TotRmsAbvGrd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotalBsmtSF {
            get {
                return this.TotalBsmtSFField;
            }
            set {
                if ((this.TotalBsmtSFField.Equals(value) != true)) {
                    this.TotalBsmtSFField = value;
                    this.RaisePropertyChanged("TotalBsmtSF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Utilities {
            get {
                return this.UtilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.UtilitiesField, value) != true)) {
                    this.UtilitiesField = value;
                    this.RaisePropertyChanged("Utilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float YearBuilt {
            get {
                return this.YearBuiltField;
            }
            set {
                if ((this.YearBuiltField.Equals(value) != true)) {
                    this.YearBuiltField = value;
                    this.RaisePropertyChanged("YearBuilt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HouseDetail", Namespace="http://schemas.datacontract.org/2004/07/test1_service")]
    [System.SerializableAttribute()]
    public partial class HouseDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuiltYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Image1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Image2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Image3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Image4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsOfferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NoOfBedroomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SquareFtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Bath {
            get {
                return this.BathField;
            }
            set {
                if ((this.BathField.Equals(value) != true)) {
                    this.BathField = value;
                    this.RaisePropertyChanged("Bath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuiltYear {
            get {
                return this.BuiltYearField;
            }
            set {
                if ((this.BuiltYearField.Equals(value) != true)) {
                    this.BuiltYearField = value;
                    this.RaisePropertyChanged("BuiltYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNoField, value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image1 {
            get {
                return this.Image1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Image1Field, value) != true)) {
                    this.Image1Field = value;
                    this.RaisePropertyChanged("Image1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image2 {
            get {
                return this.Image2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Image2Field, value) != true)) {
                    this.Image2Field = value;
                    this.RaisePropertyChanged("Image2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image3 {
            get {
                return this.Image3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Image3Field, value) != true)) {
                    this.Image3Field = value;
                    this.RaisePropertyChanged("Image3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image4 {
            get {
                return this.Image4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Image4Field, value) != true)) {
                    this.Image4Field = value;
                    this.RaisePropertyChanged("Image4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsOffer {
            get {
                return this.IsOfferField;
            }
            set {
                if ((object.ReferenceEquals(this.IsOfferField, value) != true)) {
                    this.IsOfferField = value;
                    this.RaisePropertyChanged("IsOffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoOfBedroom {
            get {
                return this.NoOfBedroomField;
            }
            set {
                if ((this.NoOfBedroomField.Equals(value) != true)) {
                    this.NoOfBedroomField = value;
                    this.RaisePropertyChanged("NoOfBedroom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SquareFt {
            get {
                return this.SquareFtField;
            }
            set {
                if ((this.SquareFtField.Equals(value) != true)) {
                    this.SquareFtField = value;
                    this.RaisePropertyChanged("SquareFt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/test1_service")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test1.ServiceReference1.House[] houseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string image1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test1.ServiceReference1.House[] house {
            get {
                return this.houseField;
            }
            set {
                if ((object.ReferenceEquals(this.houseField, value) != true)) {
                    this.houseField = value;
                    this.RaisePropertyChanged("house");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image1 {
            get {
                return this.image1Field;
            }
            set {
                if ((object.ReferenceEquals(this.image1Field, value) != true)) {
                    this.image1Field = value;
                    this.RaisePropertyChanged("image1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="House", Namespace="http://schemas.datacontract.org/2004/07/test1_service")]
    [System.SerializableAttribute()]
    public partial class House : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string areaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int bathtubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int bulit_yearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contact_noField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string image1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string image2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string image3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string image4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string isofferField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int no_of_bedroomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float priceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int squareFtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private test1.ServiceReference1.user userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string area {
            get {
                return this.areaField;
            }
            set {
                if ((object.ReferenceEquals(this.areaField, value) != true)) {
                    this.areaField = value;
                    this.RaisePropertyChanged("area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bathtub {
            get {
                return this.bathtubField;
            }
            set {
                if ((this.bathtubField.Equals(value) != true)) {
                    this.bathtubField = value;
                    this.RaisePropertyChanged("bathtub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bulit_year {
            get {
                return this.bulit_yearField;
            }
            set {
                if ((this.bulit_yearField.Equals(value) != true)) {
                    this.bulit_yearField = value;
                    this.RaisePropertyChanged("bulit_year");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contact_no {
            get {
                return this.contact_noField;
            }
            set {
                if ((object.ReferenceEquals(this.contact_noField, value) != true)) {
                    this.contact_noField = value;
                    this.RaisePropertyChanged("contact_no");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image1 {
            get {
                return this.image1Field;
            }
            set {
                if ((object.ReferenceEquals(this.image1Field, value) != true)) {
                    this.image1Field = value;
                    this.RaisePropertyChanged("image1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image2 {
            get {
                return this.image2Field;
            }
            set {
                if ((object.ReferenceEquals(this.image2Field, value) != true)) {
                    this.image2Field = value;
                    this.RaisePropertyChanged("image2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image3 {
            get {
                return this.image3Field;
            }
            set {
                if ((object.ReferenceEquals(this.image3Field, value) != true)) {
                    this.image3Field = value;
                    this.RaisePropertyChanged("image3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string image4 {
            get {
                return this.image4Field;
            }
            set {
                if ((object.ReferenceEquals(this.image4Field, value) != true)) {
                    this.image4Field = value;
                    this.RaisePropertyChanged("image4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string isoffer {
            get {
                return this.isofferField;
            }
            set {
                if ((object.ReferenceEquals(this.isofferField, value) != true)) {
                    this.isofferField = value;
                    this.RaisePropertyChanged("isoffer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int no_of_bedroom {
            get {
                return this.no_of_bedroomField;
            }
            set {
                if ((this.no_of_bedroomField.Equals(value) != true)) {
                    this.no_of_bedroomField = value;
                    this.RaisePropertyChanged("no_of_bedroom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float price {
            get {
                return this.priceField;
            }
            set {
                if ((this.priceField.Equals(value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int squareFt {
            get {
                return this.squareFtField;
            }
            set {
                if ((this.squareFtField.Equals(value) != true)) {
                    this.squareFtField = value;
                    this.RaisePropertyChanged("squareFt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string state {
            get {
                return this.stateField;
            }
            set {
                if ((object.ReferenceEquals(this.stateField, value) != true)) {
                    this.stateField = value;
                    this.RaisePropertyChanged("state");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public test1.ServiceReference1.user user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agent", ReplyAction="http://tempuri.org/IService1/agentResponse")]
        test1.ServiceReference1.AgentDetail[] agent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/agent", ReplyAction="http://tempuri.org/IService1/agentResponse")]
        System.Threading.Tasks.Task<test1.ServiceReference1.AgentDetail[]> agentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/predict_value", ReplyAction="http://tempuri.org/IService1/predict_valueResponse")]
        float predict_value(test1.ServiceReference1.Details d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/predict_value", ReplyAction="http://tempuri.org/IService1/predict_valueResponse")]
        System.Threading.Tasks.Task<float> predict_valueAsync(test1.ServiceReference1.Details d);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_value", ReplyAction="http://tempuri.org/IService1/add_valueResponse")]
        void add_value(test1.ServiceReference1.HouseDetail h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_value", ReplyAction="http://tempuri.org/IService1/add_valueResponse")]
        System.Threading.Tasks.Task add_valueAsync(test1.ServiceReference1.HouseDetail h);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_value", ReplyAction="http://tempuri.org/IService1/get_valueResponse")]
        test1.ServiceReference1.HouseDetail[] get_value();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_value", ReplyAction="http://tempuri.org/IService1/get_valueResponse")]
        System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> get_valueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/offer_value", ReplyAction="http://tempuri.org/IService1/offer_valueResponse")]
        test1.ServiceReference1.HouseDetail[] offer_value();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/offer_value", ReplyAction="http://tempuri.org/IService1/offer_valueResponse")]
        System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> offer_valueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        void delete(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/delete", ReplyAction="http://tempuri.org/IService1/deleteResponse")]
        System.Threading.Tasks.Task deleteAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_area", ReplyAction="http://tempuri.org/IService1/search_areaResponse")]
        test1.ServiceReference1.HouseDetail[] search_area(string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/search_area", ReplyAction="http://tempuri.org/IService1/search_areaResponse")]
        System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> search_areaAsync(string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_user", ReplyAction="http://tempuri.org/IService1/add_userResponse")]
        void add_user(test1.ServiceReference1.user u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/add_user", ReplyAction="http://tempuri.org/IService1/add_userResponse")]
        System.Threading.Tasks.Task add_userAsync(test1.ServiceReference1.user u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/check_user", ReplyAction="http://tempuri.org/IService1/check_userResponse")]
        bool check_user(string uname, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/check_user", ReplyAction="http://tempuri.org/IService1/check_userResponse")]
        System.Threading.Tasks.Task<bool> check_userAsync(string uname, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_property", ReplyAction="http://tempuri.org/IService1/get_propertyResponse")]
        test1.ServiceReference1.HouseDetail[] get_property(string uname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/get_property", ReplyAction="http://tempuri.org/IService1/get_propertyResponse")]
        System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> get_propertyAsync(string uname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : test1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<test1.ServiceReference1.IService1>, test1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public test1.ServiceReference1.AgentDetail[] agent() {
            return base.Channel.agent();
        }
        
        public System.Threading.Tasks.Task<test1.ServiceReference1.AgentDetail[]> agentAsync() {
            return base.Channel.agentAsync();
        }
        
        public float predict_value(test1.ServiceReference1.Details d) {
            return base.Channel.predict_value(d);
        }
        
        public System.Threading.Tasks.Task<float> predict_valueAsync(test1.ServiceReference1.Details d) {
            return base.Channel.predict_valueAsync(d);
        }
        
        public void add_value(test1.ServiceReference1.HouseDetail h) {
            base.Channel.add_value(h);
        }
        
        public System.Threading.Tasks.Task add_valueAsync(test1.ServiceReference1.HouseDetail h) {
            return base.Channel.add_valueAsync(h);
        }
        
        public test1.ServiceReference1.HouseDetail[] get_value() {
            return base.Channel.get_value();
        }
        
        public System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> get_valueAsync() {
            return base.Channel.get_valueAsync();
        }
        
        public test1.ServiceReference1.HouseDetail[] offer_value() {
            return base.Channel.offer_value();
        }
        
        public System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> offer_valueAsync() {
            return base.Channel.offer_valueAsync();
        }
        
        public void delete(string name) {
            base.Channel.delete(name);
        }
        
        public System.Threading.Tasks.Task deleteAsync(string name) {
            return base.Channel.deleteAsync(name);
        }
        
        public test1.ServiceReference1.HouseDetail[] search_area(string area) {
            return base.Channel.search_area(area);
        }
        
        public System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> search_areaAsync(string area) {
            return base.Channel.search_areaAsync(area);
        }
        
        public void add_user(test1.ServiceReference1.user u) {
            base.Channel.add_user(u);
        }
        
        public System.Threading.Tasks.Task add_userAsync(test1.ServiceReference1.user u) {
            return base.Channel.add_userAsync(u);
        }
        
        public bool check_user(string uname, string pass) {
            return base.Channel.check_user(uname, pass);
        }
        
        public System.Threading.Tasks.Task<bool> check_userAsync(string uname, string pass) {
            return base.Channel.check_userAsync(uname, pass);
        }
        
        public test1.ServiceReference1.HouseDetail[] get_property(string uname) {
            return base.Channel.get_property(uname);
        }
        
        public System.Threading.Tasks.Task<test1.ServiceReference1.HouseDetail[]> get_propertyAsync(string uname) {
            return base.Channel.get_propertyAsync(uname);
        }
    }
}
